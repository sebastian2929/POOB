#BlueJ class context
comment0.target=Interseccion
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Interseccion\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=color\ x\ y
comment1.target=Interseccion(java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ de\ los\ objetos\ la\ clase\ Interseccion.\r\n\ @param\ String\ color,\ Color\ de\ la\ interseccion.\r\n\ @param\ int\ x,\ Posicion\ x\ de\ la\ interseccion.\r\n\ @param\ int\ y,\ Posicion\ y\ de\ la\ interseccion.\r\n
comment10.params=
comment10.target=int\ getSize()
comment10.text=\r\n\ Metodo\ que\ obtiene\ el\ tamanno\ del\ arrayList\ de\ rutas\r\n\ @return\ int\ size,\ tammano\ del\ arryList.\r\n
comment11.params=
comment11.target=java.lang.String\ getType()
comment11.text=\r\n\ Metodo\ que\ retorna\ el\ tipo\ de\ interseccion.\r\n\ @return\ String\ type,\ tipo\ de\ la\ interseccion.\r\n
comment12.params=newDiameter
comment12.target=void\ changeDiameter(int)
comment12.text=\r\n\ Change\ the\ size.\r\n\ @param\ newDiameter\ the\ new\ size\ (in\ pixels).\ Size\ must\ be\ >\=0.\r\n
comment2.params=
comment2.target=void\ makeVisible()
comment2.text=\r\n\ Metodo\ que\ hace\ visible\ la\ interseccion.\r\n
comment3.params=
comment3.target=void\ makeInvisible()
comment3.text=\r\n\ Metodo\ que\ hace\ invisible\ la\ interseccion.\r\n
comment4.params=
comment4.target=int\ getPositionx()
comment4.text=\r\n\ Metodo\ que\ obtiene\ la\ posicion\ x\ de\ la\ inteterseccion.\r\n\ @return\ posicionX,\ PosicionX\ de\ la\ interseccion.\r\n
comment5.params=
comment5.target=int\ getPositiony()
comment5.text=\r\n\ Metodo\ que\ obtiene\ la\ posicion\ y\ de\ la\ inteterseccion.\r\n\ @return\ posicionY,\ PosicionY\ de\ la\ interseccion.\r\n
comment6.params=ruta
comment6.target=void\ verificaRuta(Ruta)
comment6.text=\r\n\ Metodo\ que\ verifica\ que\ la\ interseccion\ este\ relacionada\ con\ la\ ruta\ y\ si\ no\ lo\ esta\ la\ agrega\ a\ su\ arrayList\ de\ rutas.\r\n
comment7.params=
comment7.target=java.util.ArrayList\ getRutas()
comment7.text=\r\n\ Metodo\ que\ obtiene\ el\ ArrayList\ de\ rutas\ de\ cada\ interseccion.\r\n\ @return\ ArrayList<Ruta>\ rutas,\ rutas\ de\ la\ interseccion.\r\n
comment8.params=rutas
comment8.target=void\ setRutas(java.util.ArrayList)
comment8.text=\r\n\ Metodo\ que\ modifica\ el\ arraylist\ de\ rutas\ de\ una\ interseccion.\r\n\ @param\ ArrrayList<Ruta>\ rutas\ ,\ rutas\ de\ la\ interseccion.\r\n
comment9.params=ruta
comment9.target=void\ removeRuta(Ruta)
comment9.text=\r\n\ Metodo\ que\ borra\ una\ ruta\ del\ ArrayList\ de\ rutas\ de\ una\ interseccion.\r\n
numComments=13
