#BlueJ class context
comment0.target=Ruta
comment0.text=\r\n\ Un\ camino\ que\ se\ crea\ para\ unir\ dos\ intersecciones.\r\n\ \r\n\ @author\ Andres\ Felipe\ Arias\ Ajiaco\ y\ Sebastian\ David\ Blanco\ Rodriguez.\r\n\ @version\ 1/11/22\r\n
comment1.params=interseccionA\ interseccionB
comment1.target=Ruta(Interseccion,\ Interseccion)
comment1.text=\r\n\ Constructor\ de\ los\ objetos\ de\ la\ clase\ ruta.\r\n\ @param\ Interseccion\ interseccionA,\ Interseccion\ A\ (punto\ inicial\ de\ la\ ruta).\r\n\ @param\ Interseccion\ interseccionB,\ Interseccion\ B\ (punto\ final\ de\ la\ ruta).\r\n
comment10.params=posAx\ posAy\ posBx\ posBy
comment10.target=double\ getSlope(int,\ int,\ int,\ int)
comment10.text=\r\n\ Metodo\ que\ define\ la\ pendiente\ entre\ dos\ puntos.\r\n\ @param\ int\ posAx,\ Posicion\ x\ de\ la\ interseccion\ A.\r\n\ @param\ int\ posAy,\ Posicion\ x\ de\ la\ interseccion\ B.\r\n\ @param\ int\ posBx,\ Posicion\ y\ de\ la\ interseccion\ A.\r\n\ @param\ int\ posBy,\ Posicion\ y\ de\ la\ interseccion\ B.\r\n\ @return\ slope,\ Pendiente.\r\n
comment11.params=posAx\ posAy\ posBx\ posBy
comment11.target=int\ getAngle(int,\ int,\ int,\ int)
comment11.text=\r\n\ Metodo\ que\ defene\ el\ angulo\ entre\ dos\ puntos.\r\n\ @param\ int\ posAx,\ Posicion\ x\ de\ la\ interseccion\ A.\r\n\ @param\ int\ posAy,\ Posicion\ x\ de\ la\ interseccion\ B.\r\n\ @param\ int\ posBx,\ Posicion\ y\ de\ la\ interseccion\ A.\r\n\ @param\ int\ posBy,\ Posicion\ y\ de\ la\ interseccion\ B.\r\n\ @return\ angle,\ Angulo.\r\n
comment12.params=point1\ point2
comment12.target=int\ getDistance(int,\ int)
comment12.text=\r\n\ Metodo\ que\ obtine\ la\ distancia\ entre\ dos\ puntos.\r\n\ @param\ int\ point1,\ Punto\ uno.\r\n\ @param\ int\ point2,\ Punto\ dos.\r\n\ @return\ distance,\ La\ distancia\ entre\ los\ dos\ puntos.\r\n
comment13.params=color
comment13.target=void\ changeColor(java.lang.String)
comment13.text=\r\n\ Cambia\ el\ color\ de\ la\ ruta.\r\n\ @param\ Strin\ color,\ nuevo\ color\ de\ la\ ruta.\r\n
comment2.params=
comment2.target=void\ makeVisible()
comment2.text=\r\n\ Metodo\ que\ hace\ visible\ la\ ruta.\r\n
comment3.params=
comment3.target=void\ makeInvisible()
comment3.text=\r\n\ Metodo\ que\ hace\ invisible\ la\ ruta.\r\n
comment4.params=speedLimit
comment4.target=void\ setLimiteVelocidad(int)
comment4.text=\r\n\ Metodo\ que\ asigna\ un\ limite\ de\ velocidad\ a\ una\ ruta;\r\n\ @param\ int\ speedLimit,\ Limite\ de\ velocidad\ de\ la\ ruta;\r\n
comment5.params=sennal
comment5.target=void\ setSennal(Sennal)
comment5.text=\r\n\ Metodo\ que\ asigna\ una\ sennal\ a\ una\ ruta;\r\n\ @param\ Sennal\ sennal,\ Sennal\ de\ la\ ruta;\r\n
comment6.params=
comment6.target=int\ getLimiteVelocidad()
comment6.text=\r\n\ Metodo\ que\ obtiene\ el\ limite\ de\ velocidad\ de\ la\ ruta.\r\n
comment7.params=
comment7.target=Sennal\ getSennalRuta()
comment7.text=\r\n\ Metodo\ que\ obtiene\ la\ sennal\ de\ la\ ruta.\r\n
comment8.params=
comment8.target=java.lang.String\ getType()
comment8.text=\r\n\ Metodo\ que\ retorna\ el\ tipo\ de\ ruta.\r\n\ @return\ String\ type,\ tipo\ de\ la\ ruta.\r\n
comment9.params=posAx\ posAy\ posBx\ posBy\ mayorX
comment9.target=int\ setPosMaxY(int,\ int,\ int,\ int,\ int)
comment9.text=\r\n\ Metodo\ que\ define\ la\ posicion\ Y\ en\ la\ que\ se\ va\ a\ ubicar\ la\ ruta.\r\n\ @param\ int\ posAx,\ Posicion\ x\ de\ la\ interseccion\ A.\r\n\ @param\ int\ posBx,\ Posicion\ x\ de\ la\ interseccion\ B.\r\n\ @param\ int\ posAy,\ Posicion\ y\ de\ la\ interseccion\ A.\r\n\ @param\ int\ posBy,\ Posicion\ y\ de\ la\ interseccion\ B.\r\n\ @return\ posicion,\ Posiciion\ Y\ en\ la\ que\ se\ va\ a\ ubicar\ la\ ruta.\r\n
numComments=14
